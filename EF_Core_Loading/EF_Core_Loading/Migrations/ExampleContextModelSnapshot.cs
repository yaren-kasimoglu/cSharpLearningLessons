// <auto-generated />
using System;
using EF_Core_Loading.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EF_Core_Loading.Migrations
{
    [DbContext(typeof(ExampleContext))]
    partial class ExampleContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EF_Core_Loading.DAL.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("RecordDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Customer");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerName = "Yaren KAsımoğlu",
                            Email = "yk@gmail.com",
                            ModifiedDate = new DateTime(2022, 10, 16, 11, 11, 3, 16, DateTimeKind.Local).AddTicks(9282),
                            Phone = "5436097030",
                            RecordDate = new DateTime(2022, 10, 16, 11, 11, 3, 16, DateTimeKind.Local).AddTicks(9296)
                        },
                        new
                        {
                            Id = 2,
                            CustomerName = "Erdi Şen",
                            Email = "eş@gmail.com",
                            ModifiedDate = new DateTime(2022, 10, 16, 11, 11, 3, 16, DateTimeKind.Local).AddTicks(9297),
                            Phone = "5436055030",
                            RecordDate = new DateTime(2022, 10, 16, 11, 11, 3, 16, DateTimeKind.Local).AddTicks(9298)
                        },
                        new
                        {
                            Id = 3,
                            CustomerName = "Yunus Emre Teke",
                            Email = "yt@gmail.com",
                            ModifiedDate = new DateTime(2022, 10, 16, 11, 11, 3, 16, DateTimeKind.Local).AddTicks(9299),
                            Phone = "5436033030",
                            RecordDate = new DateTime(2022, 10, 16, 11, 11, 3, 16, DateTimeKind.Local).AddTicks(9299)
                        });
                });

            modelBuilder.Entity("EF_Core_Loading.DAL.Entities.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"), 1L, 1);

                    b.Property<int?>("CustomerId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("RecordDate")
                        .HasColumnType("datetime2");

                    b.HasKey("OrderId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Order");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            CustomerId = 1,
                            ModifiedDate = new DateTime(2022, 10, 16, 11, 11, 3, 17, DateTimeKind.Local).AddTicks(497),
                            OrderDate = new DateTime(2022, 10, 16, 11, 11, 3, 17, DateTimeKind.Local).AddTicks(499),
                            OrderNumber = "50000001",
                            RecordDate = new DateTime(2022, 10, 16, 11, 11, 3, 17, DateTimeKind.Local).AddTicks(499)
                        },
                        new
                        {
                            OrderId = 2,
                            CustomerId = 1,
                            ModifiedDate = new DateTime(2022, 10, 16, 11, 11, 3, 17, DateTimeKind.Local).AddTicks(500),
                            OrderDate = new DateTime(2022, 10, 16, 11, 11, 3, 17, DateTimeKind.Local).AddTicks(501),
                            OrderNumber = "50000002",
                            RecordDate = new DateTime(2022, 10, 16, 11, 11, 3, 17, DateTimeKind.Local).AddTicks(502)
                        },
                        new
                        {
                            OrderId = 3,
                            CustomerId = 1,
                            ModifiedDate = new DateTime(2022, 10, 16, 11, 11, 3, 17, DateTimeKind.Local).AddTicks(502),
                            OrderDate = new DateTime(2022, 10, 16, 11, 11, 3, 17, DateTimeKind.Local).AddTicks(503),
                            OrderNumber = "50000003",
                            RecordDate = new DateTime(2022, 10, 16, 11, 11, 3, 17, DateTimeKind.Local).AddTicks(503)
                        },
                        new
                        {
                            OrderId = 4,
                            CustomerId = 2,
                            ModifiedDate = new DateTime(2022, 10, 16, 11, 11, 3, 17, DateTimeKind.Local).AddTicks(504),
                            OrderDate = new DateTime(2022, 10, 16, 11, 11, 3, 17, DateTimeKind.Local).AddTicks(504),
                            OrderNumber = "50000004",
                            RecordDate = new DateTime(2022, 10, 16, 11, 11, 3, 17, DateTimeKind.Local).AddTicks(505)
                        },
                        new
                        {
                            OrderId = 5,
                            CustomerId = 2,
                            ModifiedDate = new DateTime(2022, 10, 16, 11, 11, 3, 17, DateTimeKind.Local).AddTicks(505),
                            OrderDate = new DateTime(2022, 10, 16, 11, 11, 3, 17, DateTimeKind.Local).AddTicks(506),
                            OrderNumber = "50000005",
                            RecordDate = new DateTime(2022, 10, 16, 11, 11, 3, 17, DateTimeKind.Local).AddTicks(506)
                        },
                        new
                        {
                            OrderId = 6,
                            CustomerId = 2,
                            ModifiedDate = new DateTime(2022, 10, 16, 11, 11, 3, 17, DateTimeKind.Local).AddTicks(507),
                            OrderDate = new DateTime(2022, 10, 16, 11, 11, 3, 17, DateTimeKind.Local).AddTicks(508),
                            OrderNumber = "50000006",
                            RecordDate = new DateTime(2022, 10, 16, 11, 11, 3, 17, DateTimeKind.Local).AddTicks(508)
                        },
                        new
                        {
                            OrderId = 7,
                            CustomerId = 3,
                            ModifiedDate = new DateTime(2022, 10, 16, 11, 11, 3, 17, DateTimeKind.Local).AddTicks(509),
                            OrderDate = new DateTime(2022, 10, 16, 11, 11, 3, 17, DateTimeKind.Local).AddTicks(509),
                            OrderNumber = "50000007",
                            RecordDate = new DateTime(2022, 10, 16, 11, 11, 3, 17, DateTimeKind.Local).AddTicks(510)
                        },
                        new
                        {
                            OrderId = 8,
                            CustomerId = 3,
                            ModifiedDate = new DateTime(2022, 10, 16, 11, 11, 3, 17, DateTimeKind.Local).AddTicks(510),
                            OrderDate = new DateTime(2022, 10, 16, 11, 11, 3, 17, DateTimeKind.Local).AddTicks(511),
                            OrderNumber = "50000008",
                            RecordDate = new DateTime(2022, 10, 16, 11, 11, 3, 17, DateTimeKind.Local).AddTicks(511)
                        },
                        new
                        {
                            OrderId = 9,
                            CustomerId = 3,
                            ModifiedDate = new DateTime(2022, 10, 16, 11, 11, 3, 17, DateTimeKind.Local).AddTicks(512),
                            OrderDate = new DateTime(2022, 10, 16, 11, 11, 3, 17, DateTimeKind.Local).AddTicks(512),
                            OrderNumber = "50000009",
                            RecordDate = new DateTime(2022, 10, 16, 11, 11, 3, 17, DateTimeKind.Local).AddTicks(513)
                        });
                });

            modelBuilder.Entity("EF_Core_Loading.DAL.Entities.Order", b =>
                {
                    b.HasOne("EF_Core_Loading.DAL.Entities.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("EF_Core_Loading.DAL.Entities.Customer", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
