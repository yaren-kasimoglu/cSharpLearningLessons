// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlakDukkani_MaratonEFCore.DAL.Context;

#nullable disable

namespace PlakDukkani_MaratonEFCore.Migrations
{
    [DbContext(typeof(PlakDbContext))]
    [Migration("20221016180638_init6")]
    partial class init6
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PlakDukkani_MaratonEFCore.DAL.Entities.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AdminName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.ToTable("Admin");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AdminName = "Yaren",
                            Password = "123"
                        });
                });

            modelBuilder.Entity("PlakDukkani_MaratonEFCore.DAL.Entities.Album", b =>
                {
                    b.Property<int>("AlbumId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AlbumId"), 1L, 1);

                    b.Property<string>("AlbumAdi")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CikisTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DevamDurumu")
                        .HasColumnType("bit");

                    b.Property<decimal>("Fiyati")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("IndirimOrani")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("AlbumId");

                    b.HasIndex("ArtistId");

                    b.ToTable("Album");

                    b.HasData(
                        new
                        {
                            AlbumId = 1,
                            AlbumAdi = "The Nina Simone Collection Plak",
                            ArtistId = 1,
                            CikisTarihi = new DateTime(2022, 10, 16, 21, 6, 37, 916, DateTimeKind.Local).AddTicks(7391),
                            DevamDurumu = true,
                            Fiyati = 223.20m,
                            IndirimOrani = 0m
                        },
                        new
                        {
                            AlbumId = 2,
                            AlbumAdi = "Edith Piaf La Vie En Rose Plak",
                            ArtistId = 2,
                            CikisTarihi = new DateTime(2022, 10, 16, 21, 6, 37, 916, DateTimeKind.Local).AddTicks(7405),
                            DevamDurumu = false,
                            Fiyati = 172.00m,
                            IndirimOrani = 0.5m
                        },
                        new
                        {
                            AlbumId = 3,
                            AlbumAdi = "Cyndi Lauper She'S So Unusual Plak",
                            ArtistId = 3,
                            CikisTarihi = new DateTime(2022, 10, 16, 21, 6, 37, 916, DateTimeKind.Local).AddTicks(7407),
                            DevamDurumu = false,
                            Fiyati = 369.60m,
                            IndirimOrani = 0.75m
                        },
                        new
                        {
                            AlbumId = 4,
                            AlbumAdi = "Various Artists The Very Best of Jazz Love Songs Plak",
                            ArtistId = 4,
                            CikisTarihi = new DateTime(2022, 10, 16, 21, 6, 37, 916, DateTimeKind.Local).AddTicks(7408),
                            DevamDurumu = false,
                            Fiyati = 175.20m,
                            IndirimOrani = 0m
                        },
                        new
                        {
                            AlbumId = 5,
                            AlbumAdi = "Şu Dünyanın Sırrı",
                            ArtistId = 5,
                            CikisTarihi = new DateTime(2022, 10, 16, 21, 6, 37, 916, DateTimeKind.Local).AddTicks(7409),
                            DevamDurumu = true,
                            Fiyati = 22.50m,
                            IndirimOrani = 0m
                        },
                        new
                        {
                            AlbumId = 6,
                            AlbumAdi = "Akılla Bir Konuşmam Oldu",
                            ArtistId = 5,
                            CikisTarihi = new DateTime(2022, 10, 16, 21, 6, 37, 916, DateTimeKind.Local).AddTicks(7410),
                            DevamDurumu = true,
                            Fiyati = 14.90m,
                            IndirimOrani = 0m
                        });
                });

            modelBuilder.Entity("PlakDukkani_MaratonEFCore.DAL.Entities.Artist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AlbumId")
                        .HasColumnType("int");

                    b.Property<string>("ArtistName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Artist");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AlbumId = 1,
                            ArtistName = "Nina Simone"
                        },
                        new
                        {
                            Id = 2,
                            AlbumId = 2,
                            ArtistName = "Edith Piaf"
                        },
                        new
                        {
                            Id = 3,
                            AlbumId = 3,
                            ArtistName = "Cyndi Lauper"
                        },
                        new
                        {
                            Id = 4,
                            AlbumId = 4,
                            ArtistName = "Various Artists"
                        },
                        new
                        {
                            Id = 5,
                            AlbumId = 5,
                            ArtistName = "Fazıl Say"
                        });
                });

            modelBuilder.Entity("PlakDukkani_MaratonEFCore.DAL.Entities.Album", b =>
                {
                    b.HasOne("PlakDukkani_MaratonEFCore.DAL.Entities.Artist", "Artist")
                        .WithMany("Albums")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Artist");
                });

            modelBuilder.Entity("PlakDukkani_MaratonEFCore.DAL.Entities.Artist", b =>
                {
                    b.Navigation("Albums");
                });
#pragma warning restore 612, 618
        }
    }
}
